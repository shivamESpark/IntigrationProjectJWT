<script>

    // languages
    const hindi = document.getElementById("hindi");
    hindi.addEventListener("click", checkLanguage);
    

    const english = document.getElementById("english");
    english.addEventListener("click", checkLanguage);

    const gujarati = document.getElementById("gujarati");
    gujarati.addEventListener("click", checkLanguage);


    function isCheck(lang, rws){

        if(lang.checked){
            
            for(let i=0; i<rws.length; i++){
                rws[i].disabled = false;
            }
        } else{
            for(let i=0; i<rws.length; i++){
                rws[i].disabled = true;
                rws[i].value = 0;
            }    
        }    
    }

    function checkLanguage(){
        const rwsh = document.getElementsByClassName("rwsh");
        const rwse = document.getElementsByClassName("rwse");
        const rwsg = document.getElementsByClassName("rwsg");

        isCheck(english, rwse);
        isCheck(hindi, rwsh);
        isCheck(gujarati, rwsg)
    }


    // technologies
    const php = document.getElementById("php");
    php.addEventListener("click", checkTechnology);

    const py = document.getElementById("python");
    py.addEventListener("click", checkTechnology);

    const java = document.getElementById("java");
    java.addEventListener("click", checkTechnology);

    function checkTechnology(){
        const bmephp = document.getElementsByClassName("bmephp");
        const bmepy = document.getElementsByClassName("bmepy");
        const bmejv = document.getElementsByClassName("bmejv");

        isCheck(php, bmephp);
        isCheck(py, bmepy);
        isCheck(java, bmejv);
    }



    // dependency functios for valueValidation
    function whiteSpaceRemove(str){
            return str.trim();
        }

        function numberCheck(str) {
            return !isNaN(str)
            
        }

        function minLengthCheck(str, n=1){
            return str.length < n;
        }

        function maxLengthCheck(str, n=30){
            return str.length > n;
        }

        function checkYear(fieldId){
            const yearId = document.getElementById(fieldId);
            const year = yearId.value;

            if(year > 0 && numberCheck(year) && year.length == 4){
                return true;
            } else {
                return false;
            }
        }
       
        function percentageCheck(id){
            val = document.getElementById(id).value;
            if (isNaN(val) || val < 0 || val > 100) {
                return false;
            } else {
                return true;
            }
        }
    // dependency function ends here

    // require field validations first
    function requireValidation(className){
        
        const basicInputs = document.getElementsByClassName(className);
        function emptyCheckFlag(){
            let emptyFlag = false;
            for(let b of basicInputs){
                if(b.value == "" || b.value == undefined || b.value == null){    
                    let id = b.id;
                    document.getElementById(b.id).style.border = "1.5px solid red";
                    emptyFlag = true;
                } else {
                    document.getElementById(b.id).style.border = "";
                }
            }
            return emptyFlag;
        }


        if(emptyCheckFlag()){
            const errmsg = document.getElementById("errmsg");
            errmsg.style.color = "red";
            errmsg.style.fontWeight = "bold";
            errmsg.style.fontSize = "16px";
            errmsg.innerHTML = "Empty Field Is Not Valid! Check With Red Boreder!";
        } else {
            errmsg.innerHTML = "";
            return true;
        }
        return false;
    }
    // require field validation function ends 

    

    // value validation function will be called second
    function valueValidation(FieldId, minLen, maxLen){

        if(FieldId == null || FieldId == undefined){
            return false;
        }

        const fieldValue = document.getElementById(FieldId).value;
        console.log(fieldValue)


        const fValue = whiteSpaceRemove(fieldValue);
        console.log("trmvalue=", fValue);

        if(minLengthCheck(fValue, minLen)){
            console.log("min check false")
            return false;
        } else{
            console.log("min true");
        }


        if(maxLengthCheck(fValue, maxLen)){
            console.log("max check false")
            return false;
        }else{
            console.log("max true");
        }

        if(FieldId == "phone" || FieldId == "phone2" || FieldId == "phone3" || FieldId == "zipcode" || FieldId == "expected_ctc" || FieldId == "actual_ctc"){
            if(!numberCheck(fValue)){
                console.log("phone or zip num check failed");
                return false;
            } else{
                console.log(" phone or zip num true");
            }    
        } else {

            if(numberCheck(fValue)){
                console.log("num chekc failed");
                return false;
            } else{
                console.log("num true");
            }
        }
        return true;
    }
    // valueValidation function ends here
    
    // radiobutton check function
     // radio check
     function checkRadio(nameAttr){
        let radiosBtn = document.getElementsByClassName(nameAttr);

        for(let i=0; i<radiosBtn.length; i++){
            if(radiosBtn[i].checked){
                let err = document.getElementById("radiogender");
                err.innerHTML = "";
                return true;
            } 
        } 

        let err = document.getElementById("radiogender");
        err.innerHTML = "select a gender";
        err.style.color = "red";
        err.style.fontSize = "14px";
    
        return false;
    }    
    // radio check ends

    
    // validate select /combobox
    function checkCombobox(){
        let checkFlagOpt = false;
        let checkFlagOp = true;

        let checkCombo = document.getElementsByClassName("combobox");

        for(let i=0; i<checkCombo.length; i++){
            let childrens = checkCombo[i].children;
            for(let child of childrens){
                if(child.getElementsByTagName("option").length > 1){
                    let options = child.getElementsByTagName("option");
                    for(op of options){
                        if(op.selected){
                            // console.log("child of child executed")
                            checkFlagOpt = true; 
                            break;
                        }
                    }
                }
                if(child.selected){
                    // console.log("child=>");
                    checkFlagOp = true;
                } 
            }

            if(checkFlagOp && checkFlagOpt){
                return true;
            }
        }
    }
    // combobox check



    // check date function starts
    function checkDate(fieldId) {
            // field id
            console.log(fieldId);
            let date = document.getElementById(fieldId).value;
            console.log("date",date);

            // Date format: YYYY-MM-DD
            var datePattern = /^([12]\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01]))/;

            // Check if the date string format is a match
            var matchArray = date.match(datePattern);
            if (matchArray == null) {
                return false;
            }

            // Remove any non digit characters
            var dateString = date.replace(/\D/g, ''); 

            // Parse integer values from the date string
            var year = parseInt(dateString.substr(0, 4));
            var month = parseInt(dateString.substr(4, 2));
            var day = parseInt(dateString.substr(6, 2));
        
            // Define the number of days per month
            var daysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];

            // Leap years
            if (year % 400 == 0 || (year % 100 != 0 && year % 4 == 0)) {
                daysInMonth[1] = 29;
            }

            if (month < 1 || month > 12 || day < 1 || day > daysInMonth[month - 1]) {
                return false;
            }
            return true;
    }
    // check date functions ends



    // check email function
    function checkEmail() {
        var email = document.getElementById('email');
        var filter = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        if (!filter.test(email.value)) {
            email.style.color = "red";
            alert('Please provide a valid email address');
            // email.focus;
            console.log("email false");
            return false;
        } else {
            email.style.color = "black";
            console.log("email true");
            return true;
            
        }
    }
    // check emails ends 




    // counters id, classes and events 
    const previous = document.getElementById("previous");
    const next = document.getElementById("next");
    const sbmit = document.getElementById("submit");
    previous.addEventListener("click", previosPage);
    next.addEventListener("click", nextPage);
    const components = document.getElementsByClassName("components");
    // dipslay counters id, classes and events 


    // making all fieldset invisible and submit button
    for(let component of components){
        component.style.display = "none";
    }
    

    // function to post data
    async function postData(){
        try{
            let formEntries = new FormData(document.querySelector("form"));
            let jObj = {};
            formEntries.forEach((values, keys)=>{
                if(jObj[keys] != undefined){
                    jObj[keys] += `,${values}`;
                } else {
                    jObj[keys] = values;
                }
            })
            console.log(jObj)
        
            const response = await fetch("http://localhost:8080/wireframecrud/addData", {
                method:"POST",
                body: JSON.stringify(jObj),
                headers : {
                    'Content-Type': 'application/json'
                }
            });

            if(!response.ok)  {
                throw new Error("Network Response is not okay");
            }

        } catch (error) {
            console.log(error);
        }
        
    }   




    // function to post data
    async function postDataUpdate(){
        try{
            let formEntries = new FormData(document.querySelector("form"));
            let jObj = {};
            formEntries.forEach((values, keys)=>{
                if(jObj[keys] != undefined){
                    jObj[keys] += `,${values}`;
                } else {
                    jObj[keys] = values;
                }
            })
            console.log(jObj)
        
            const response = await fetch("http://localhost:8080/wireframecrud/update", {
                method:"POST",
                body: JSON.stringify(jObj),
                headers : {
                    'Content-Type': 'application/json'
                }
            });

            if(!response.ok)  {
                throw new Error("Network Response is not okay");
            }

        } catch (error) {
            console.log(error);
        }
        
    }   
    // end of post function data
    

    // moving the next page and checking validations
    function nextPage(){
        
        const searchParams = window.location.search;
        const urlParams = new URLSearchParams(searchParams);
        const ids = urlParams.get("id");
        
        // console.log("hello")
        
        // for basic form validation
        if(displayCounter == 0){
            if(basicField()){
                console.log("BASIC OK", displayCounter);
            } else{
                return;
            }
        }
        
        if(displayCounter == 1){
            if(education()){
                console.log("EDUCATION OK", displayCounter);
            } else {
                return;
            }
        }

        if(displayCounter == 4){
            if(workExperice()){
                console.log("WORK OK", displayCounter);
            } else {
                return;
            }
        }
        

        if(displayCounter == 5){
            if(references()){
                if(ids){
                    next.innerHTML = "";
                    const inputs = document.createElement("input");
                    inputs.setAttribute("type", "submit");
                    inputs.setAttribute("value", "Update");
                    inputs.style.background = "#7ecee7"
                    inputs.style.border = "none";
                    next.appendChild(inputs);
                } else {
                    next.innerHTML = "";
                    const inputs = document.createElement("input");
                    inputs.setAttribute("type", "submit");
                    inputs.setAttribute("value", "Submit");
                    inputs.style.background = "#7ecee7"
                    inputs.style.border = "none";
                    next.appendChild(inputs);
                }
                console.log("REF OK", displayCounter);
            } else {
                return;
            }
        }

        
        if(displayCounter == 6){
            if(preferences()){
               
                console.log("PREF OK", displayCounter);
            } else {
                return;
            }

            
        }      
        
        displayCounter++;


        if(displayCounter == 7){
            if(ids){
                postDataUpdate()
                alert("your data has been updated");   
                window.location.replace("http://localhost:8080/wireframecrud");
            } else {
                postData();
                alert("your response has been submited");
                window.location.replace("http://localhost:8080/wireframecrud");
            }
            
            displayCounter--;
        }
      
        



        previous.style.display = "block";
        displayElement(displayCounter);
    
    }

    function previosPage(){
        console.log(displayCounter)
        if(displayCounter < 1){
            previous.style.display = "none";
            return;
        } else {
            // next.style.display = "block";
            next.innerHTML = "next";
            displayCounter--;
            displayElement(displayCounter);
        }
    }
    
    let displayCounter = 0;
    previous.style.display = "none";

    
    if(displayCounter == 0){
        document.getElementById("0").style.display = "block";
    } else {
        document.getElementById("0").style.display = "none";
    }

    function displayElement(displayId){
        for(let component of components){
            component.style.display = "none";
        }
    
        if(displayCounter == displayId){
            document.getElementById(String(displayId)).style.display = "block"; 
        } else {
            document.getElementById(String(displayId)).style.display = "none";
        }
    }




    // basic field validation check 
    
    function basicField(){
        if(requireValidation("basicdetails")){
            function basicfieldValidation(){
                if(
                    valueValidation("fname", 1, 30) &&
                    valueValidation("lname",1, 30) && 
                    valueValidation("designation", 1, 30) && 
                    valueValidation("address1",1, 50) && 
                    valueValidation("address2", 1, 50) && 
                    valueValidation("city",1,20) &&
                    valueValidation("phone", 4, 17) &&
                    valueValidation("zipcode", 6,8) &&
                    checkRadio("radioGen") &&
                    checkCombobox() &&
                    checkDate("dob") &&
                    checkEmail()
                ) {
                    console.log("basic Field checked");
                    // displayCounter++;
                    return true;
                } else {
                    console.log("basic field failed");
                    return false;
                }
            }
            
            if(basicfieldValidation()){
                return true;
            } else {
                return false;
            }
            
        } else {
            console.log("require validation failed");
            return false;
        }

    }
    
        

    // basicfield validation check ends 


    // education validation check
    function education(){
        if(requireValidation("eduDetails")){
            
            return true;
        } else {
            return false;
        }
    }
    // education validation check


    // work experience
    function workExperice(){
        if(requireValidation("workE")){
            return true;
        } else {
            return false;
        }
    }
    // work experience

    // references 
    function references(){
        if(requireValidation("ref")){
            return true;
        } else {
            return false;
        }
    }
    // references

    // prefrences
    function preferences(){
        if(requireValidation("pref")){
            return true;
        } else {
            return false;
        }
    }
    // prefrences

    


</script>




<!-- 
let data = Object.fromEntries(new FormData(document.querySelector("form")).entries());
const allInputsForEducation = Array.from(document.querySelectorAll("#tableEdu input")).map(d => d.value);
const educationDetails = [];
console.log(allInputsForEducation)
for (let i = 0; i < allInputsForEducation.length; i += 3) {
    const obj = {
        courseName: allInputsForEducation[i],
        year: parseInt(allInputsForEducation[i + 1]),
        marks: parseInt(allInputsForEducation[i + 2])
    };
    educationDetails.push(obj);
}
console.log(educationDetails);
data["education[]"] = educationDetails;
console.log(data); -->